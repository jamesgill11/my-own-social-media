[{"/Users/jamesgill/Desktop/merng/client/src/index.js":"1","/Users/jamesgill/Desktop/merng/client/src/reportWebVitals.js":"2","/Users/jamesgill/Desktop/merng/client/src/App.js":"3","/Users/jamesgill/Desktop/merng/client/src/ApolloProvider.js":"4","/Users/jamesgill/Desktop/merng/client/src/Components/MenuBar.js":"5","/Users/jamesgill/Desktop/merng/client/src/Pages/Login.js":"6","/Users/jamesgill/Desktop/merng/client/src/Pages/Home.js":"7","/Users/jamesgill/Desktop/merng/client/src/Pages/Register.js":"8","/Users/jamesgill/Desktop/merng/client/src/Components/PostCard.js":"9","/Users/jamesgill/Desktop/merng/client/src/utils/hooks.js":"10","/Users/jamesgill/Desktop/merng/client/src/context/auth.js":"11","/Users/jamesgill/Desktop/merng/client/src/utils/authRoute.js":"12","/Users/jamesgill/Desktop/merng/client/src/Components/PostForm.js":"13","/Users/jamesgill/Desktop/merng/client/src/utils/graphql.js":"14","/Users/jamesgill/Desktop/merng/client/src/Components/LikePost.js":"15","/Users/jamesgill/Desktop/merng/client/src/Pages/SinglePost.js":"16","/Users/jamesgill/Desktop/merng/client/src/Components/DeleteButton.js":"17"},{"size":430,"mtime":1611670665444,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1611668518247,"results":"20","hashOfConfig":"19"},{"size":904,"mtime":1612124989460,"results":"21","hashOfConfig":"19"},{"size":658,"mtime":1611932113148,"results":"22","hashOfConfig":"19"},{"size":1448,"mtime":1611853811927,"results":"23","hashOfConfig":"19"},{"size":2137,"mtime":1611852442405,"results":"24","hashOfConfig":"19"},{"size":1162,"mtime":1611938942085,"results":"25","hashOfConfig":"19"},{"size":2900,"mtime":1611852680225,"results":"26","hashOfConfig":"19"},{"size":1406,"mtime":1612124496846,"results":"27","hashOfConfig":"19"},{"size":398,"mtime":1611849674566,"results":"28","hashOfConfig":"19"},{"size":1289,"mtime":1611854526681,"results":"29","hashOfConfig":"19"},{"size":419,"mtime":1611854926683,"results":"30","hashOfConfig":"19"},{"size":1883,"mtime":1612127923761,"results":"31","hashOfConfig":"19"},{"size":318,"mtime":1611932602773,"results":"32","hashOfConfig":"19"},{"size":1303,"mtime":1612130454894,"results":"33","hashOfConfig":"19"},{"size":2694,"mtime":1612125734408,"results":"34","hashOfConfig":"19"},{"size":1343,"mtime":1612208905615,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1hykb1x",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jamesgill/Desktop/merng/client/src/index.js",[],["72","73"],"/Users/jamesgill/Desktop/merng/client/src/reportWebVitals.js",[],"/Users/jamesgill/Desktop/merng/client/src/App.js",[],"/Users/jamesgill/Desktop/merng/client/src/ApolloProvider.js",[],"/Users/jamesgill/Desktop/merng/client/src/Components/MenuBar.js",[],"/Users/jamesgill/Desktop/merng/client/src/Pages/Login.js",[],"/Users/jamesgill/Desktop/merng/client/src/Pages/Home.js",[],"/Users/jamesgill/Desktop/merng/client/src/Pages/Register.js",[],"/Users/jamesgill/Desktop/merng/client/src/Components/PostCard.js",[],"/Users/jamesgill/Desktop/merng/client/src/utils/hooks.js",[],"/Users/jamesgill/Desktop/merng/client/src/context/auth.js",[],"/Users/jamesgill/Desktop/merng/client/src/utils/authRoute.js",[],"/Users/jamesgill/Desktop/merng/client/src/Components/PostForm.js",[],"/Users/jamesgill/Desktop/merng/client/src/utils/graphql.js",[],"/Users/jamesgill/Desktop/merng/client/src/Components/LikePost.js",[],"/Users/jamesgill/Desktop/merng/client/src/Pages/SinglePost.js",["74"],"import React, { useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nimport { Button, Icon, Label, Card, Grid, Image } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nimport { AuthContext } from \"../context/auth\";\nimport LikePost from \"../Components/LikePost\";\nimport DeleteButton from \"../Components/DeleteButton\";\n\nfunction SinglePost(props) {\n  const postId = props.match.params.postId;\n  const { user } = useContext(AuthContext);\n\n  const { data: { getPost } = {} } = useQuery(FETCH_POST_QUERY, {\n    variables: { postId },\n  });\n\n  function deletePostCallback() {\n    props.history.push(\"/\");\n  }\n\n  let postMarkup;\n  if (!getPost) {\n    postMarkup = <p>Loading post...</p>;\n  } else {\n    const {\n      id,\n      body,\n      createdAt,\n      username,\n      comments,\n      likes,\n      likeCount,\n      commentCount,\n    } = getPost;\n\n    postMarkup = (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={2}>\n            <Image\n              src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\n              size=\"small\"\n              float=\"right\"\n            />\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Card fluid>\n              <Card.Content>\n                <Card.Header>{username}</Card.Header>\n                <Card.Meta>\n                  {moment(createdAt).fromNow()}\n                  <Card.Description>{body}</Card.Description>\n                </Card.Meta>\n              </Card.Content>\n              <hr />\n              <Card.Content extra>\n                <LikePost user={user} post={{ id, likeCount, likes }} />\n                <Button\n                  as=\"div\"\n                  labelPosition=\"right\"\n                  onClick={() => console.log(\"Comment on Post\")}\n                >\n                  <Button basic color=\"blue\">\n                    <Icon name=\"comments\" />\n                  </Button>\n                  <Label basic color=\"blue\" pointing=\"left\">\n                    {commentCount}\n                  </Label>\n                </Button>\n                {user && user.username === username && (\n                  <DeleteButton postId={id} callback={deletePostCallback} />\n                )}\n              </Card.Content>\n            </Card>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n  return postMarkup;\n}\n\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\nexport default SinglePost;\n","/Users/jamesgill/Desktop/merng/client/src/Components/DeleteButton.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":32,"column":7,"nodeType":"81","messageId":"82","endLine":32,"endColumn":15},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'comments' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]